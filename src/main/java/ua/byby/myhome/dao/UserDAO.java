package ua.byby.myhome.dao;

import ua.byby.myhome.models.User;
import ua.byby.myhome.util.Column;
import ua.byby.myhome.util.Table;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Optional;

public class UserDAO extends DAO {

    @Override
    public void createTable() {
        try {
            PreparedStatement statement = getConnection().prepareStatement("CREATE TABLE IF NOT EXISTS ? (" +
                    "user_id int GENERATED BY DEFAULT AS IDENTITY ON DELETE CASCADE," +
                    "nick varchar(32) NOT NULL)," +
                    "PRIMARY KEY(user_id)");

            statement.setString(1, Table.USER);
            statement.executeUpdate();
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }

    public Optional<User> getUser(String nick) {
        try {
            PreparedStatement statement = getConnection().prepareStatement("SELECT * FROM ? WHERE ?=?");

            statement.setString(1, Table.USER);
            statement.setString(2, Column.NICK);
            statement.setString(3, nick);

            ResultSet result = statement.executeQuery();
            User user = new User();
            user.setUserId(result.getInt(Column.USER_ID));
            user.setNick(result.getString(Column.NICK));

            return Optional.of(user);
        } catch (Exception exception) {
            return Optional.empty();
        }
    }

    public Optional<User> getUserById(int userId) {
        try {
            PreparedStatement statement = getConnection().prepareStatement("SELECT * FROM ? WHERE ?=?");

            statement.setString(1, Table.USER);
            statement.setString(2, Column.USER_ID);
            statement.setInt(3, userId);

            ResultSet result = statement.executeQuery();
            User user = new User();
            user.setUserId(result.getInt(Column.USER_ID));
            user.setNick(result.getString(Column.NICK));

            return Optional.of(user);
        } catch (Exception exception) {
            return Optional.empty();
        }
    }

    public void createUser(String nick) {
        try {
            PreparedStatement statement = getConnection().prepareStatement("INSERT INTO ?(?) VALUES(?)");

            statement.setString(1, Table.USER);
            statement.setString(2, Column.NICK);
            statement.setString(3, nick);

            statement.executeUpdate();
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }
}
